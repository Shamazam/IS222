
-- ID
-- S11219545 Shamal Prasad
-- S11220337 George Fong
-- S11215227 Daniyal Sultan
-- S11219345 Akash Mishra

--------------------------------------------------------------------------------------

-- QUERY 1

SELECT CANDIDATE.CAND_LNAME, QUALIFICATION.QUAL_DESCRIPTION
FROM CANDIDATE

LEFT JOIN EDUCATION ON CANDIDATE.CAND_NUM = EDUCATION.CAND_NUM
LEFT JOIN QUALIFICATION ON EDUCATION.QUAL_CODE = QUALIFICATION.QUAL_CODE

ORDER BY QUALIFICATION.QUAL_DESCRIPTION;





-------------------------------------------------------------------------------------

-- QUERY 2

SELECT DISTINCT COMPANY.COMP_NAME
FROM COMPANY

JOIN OPENING ON COMPANY.COMP_CODE = OPENING.COMP_CODE
JOIN PLACEMENT ON OPENING.OPENING_NUM = PLACEMENT.OPENING_NUM

ORDER BY COMPANY.COMP_NAME;







-------------------------------------------------------------------------------------

-- QUERY 3


SELECT CANDIDATE.CAND_NUM,CANDIDATE.CAND_LNAME, QUALIFICATION.QUAL_DESCRIPTION AS Candidate_Qualification, COMPANY.COMP_CODE,COMPANY.COMP_NAME, QUALIFICATION.QUAL_DESCRIPTION AS Company_Needed_Qualification

FROM QUALIFICATION 

LEFT JOIN EDUCATION ON QUALIFICATION.QUAL_CODE = EDUCATION.QUAL_CODE
LEFT JOIN CANDIDATE  ON EDUCATION.CAND_NUM = CANDIDATE.CAND_NUM
LEFT JOIN OPENING  ON QUALIFICATION.QUAL_CODE = OPENING.QUAL_CODE
LEFT JOIN COMPANY  ON OPENING.COMP_CODE = COMPANY.COMP_CODE; 





-------------------------------------------------------------------------------------------

-- QUERY 4

SELECT CANDIDATE.CAND_LNAME, COURSE.COURSE_DESCRIPTION, SESSION.SESSION_STARTDATE, COURSE.COURSE_FEE, (SELECT SUM(COURSE.COURSE_FEE) FROM COURSE INNER JOIN EDUCATION  ON COURSE.QUAL_CODE = EDUCATION.QUAL_CODE WHERE EDUCATION.CAND_NUM = CANDIDATE.CAND_NUM) AS Total_Cost

    
FROM CANDIDATE


LEFT JOIN EDUCATION ON CANDIDATE.CAND_NUM = EDUCATION.CAND_NUM
LEFT JOIN QUALIFICATION ON EDUCATION.QUAL_CODE = QUALIFICATION.QUAL_CODE
LEFT JOIN PREREQUISITE ON QUALIFICATION.QUAL_CODE = PREREQUISITE.QUAL_CODE
LEFT JOIN COURSE ON PREREQUISITE.QUAL_CODE = COURSE.QUAL_CODE
LEFT JOIN SESSION ON COURSE.COURSE_NUM = SESSION.COURSE_NUM

ORDER BY CANDIDATE.CAND_LNAME;




-------------------------------------------------------------------------------------------------

-- QUERY 5


SELECT CANDIDATE.CAND_NUM, CANDIDATE.CAND_LNAME, (COURSE.COURSE_FEE + SESSION.SESSION_FEE) As Total_Fees, ENROLL.ENROLL_FEEPAID, (COURSE.COURSE_FEE + SESSION.SESSION_FEE -  ENROLL.ENROLL_FEEPAID) AS Total_Fees_Due 

FROM CANDIDATE 

JOIN ENROLL ON CANDIDATE.CAND_NUM = ENROLL.CAND_NUM 
JOIN SESSION ON ENROLL.SESSION_NUM = SESSION.SESSION_NUM 
JOIN COURSE ON SESSION.COURSE_NUM = COURSE.COURSE_NUM 


WHERE (COURSE.COURSE_FEE + SESSION.SESSION_FEE -  ENROLL.ENROLL_FEEPAID) > 0
GROUP By CANDIDATE.CAND_NUM,COURSE.COURSE_NUM,SESSION.SESSION_NUM;


---------------------------------------------------------------------------------------------

-- QUERY 6

SELECT  COMPANY.COMP_CODE, COMPANY.COMP_NAME, OPENING.OPENING_DESCRIPTION,OPENING.OPENING_AVAILABLE,COUNT(PLACEMENT.CAND_NUM) AS Successful_Placements, QUALIFICATION.QUAL_DESCRIPTION

FROM COMPANY

LEFT JOIN OPENING ON COMPANY.COMP_CODE = OPENING.COMP_CODE
LEFT JOIN PLACEMENT ON OPENING.OPENING_NUM = PLACEMENT.OPENING_NUM
LEFT JOIN QUALIFICATION ON OPENING.QUAL_CODE = QUALIFICATION.QUAL_CODE

GROUP BY OPENING.OPENING_NUM,COMPANY.COMP_CODE;






------------------------------------------------------------------------------------------

-- QUERY 7


-- ALTER TABLE STRUCTURE FOR OPENING PAY


ALTER TABLE OPENING ADD COLUMN OPENING_PAY DECIMAL NOT NULL;


-- Insert data 
UPDATE OPENING
SET OPENING_PAY = '16000'
WHERE OPENING_NUM = 320;

UPDATE OPENING
SET OPENING_PAY = '15000'
WHERE OPENING_NUM = 220;

UPDATE OPENING
SET OPENING_PAY = '30000'
WHERE OPENING_NUM = 301;

UPDATE OPENING
SET OPENING_PAY = '25000'
WHERE OPENING_NUM = 420;

UPDATE OPENING
SET OPENING_PAY = '22000'
WHERE OPENING_NUM = 520;

UPDATE OPENING
SET OPENING_PAY = '19500'
WHERE OPENING_NUM = 620;

UPDATE OPENING
SET OPENING_PAY = '17950'
WHERE OPENING_NUM = 720;

UPDATE OPENING
SET OPENING_PAY = '20280'
WHERE OPENING_NUM = 820;

UPDATE OPENING
SET OPENING_PAY = '19999'
WHERE OPENING_NUM = 920;

UPDATE OPENING
SET OPENING_PAY = '26125'
WHERE OPENING_NUM = 140; 



SELECT COMPANY.COMP_CODE, COMPANY.COMP_NAME, QUALIFICATION.QUAL_DESCRIPTION, OPENING.OPENING_DESCRIPTION, ROUND(AVG(OPENING.OPENING_PAY)) AS Average_Pay

FROM COMPANY

JOIN OPENING  ON COMPANY.COMP_CODE = OPENING.COMP_CODE 
JOIN QUALIFICATION  ON QUALIFICATION.QUAL_CODE = OPENING.QUAL_CODE 

GROUP BY COMPANY.COMP_CODE,OPENING.QUAL_CODE,OPENING.OPENING_NUM;
------------------------------------------------------------------------------------------------------------------------------------------------------------


















